[project]
name = "app"
version = "0.1.0"
description = "Backend"
requires-python = ">=3.10,<3.11"
readme = "README.md"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "pydantic>2.0",
    "pydantic-settings<3.0.0,>=2.2.1",
    "pymupdf==1.25.1",
    "pymongo==4.11",
    "odmantic>=1.0.2",
    "celery>=5.4.0",
    "redis>=5.0.7",
    "flower>=2.0.1",
    "requests>=2.32.3",
    "playwright>=1.51.0",
    "beautifulsoup4>=4.13.4",
    "openai>=1.74.0",
    "pillow>=11.2.1",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "pytest-asyncio>=0.23.8",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    "ipykernel>=6.29.5",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py310"
exclude = []

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
